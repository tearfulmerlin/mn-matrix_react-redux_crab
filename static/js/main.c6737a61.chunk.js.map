{"version":3,"sources":["functions/generators/cell-generator.js","functions/generators/table-generator.js","functions/generators/row-generator.js","Strore/store.js","Components/Spinner.js","Components/TableHead.js","functions/calculators/calc-average.js","Components/TableFooter.js","functions/calculators/calc-sum.js","Components/TableCell.js","Components/TableRow.js","Components/TableBody.js","Components/MatrixTable.js","Components/StartingForm.js","App.js","index.js"],"names":["cellGenerator","value","Math","trunc","random","uuid","uuidv1","tableGenerator","rowCount","columnCount","nums","i","push","j","rowGenerator","row","store","createStore","state","action","type","loading","loaded","nearestCount","tableVars","filter","rowIndex","map","cell","percentageRow","startLoading","finishLoading","Spinner","className","connect","cellIndex","key","calcAverage","sum","length","calcSum","reduce","a","dispatch","increase","Actions","decrease","rowSum","percentageValue","round","onClick","onContextMenu","event","preventDefault","style","height","removeRow","setPercentageRow","onMouseOver","console","log","onMouseLeave","addRow","Fragment","MatrixTable","generateTable","useState","formState","setFormState","onSubmit","setTimeout","min","max","placeholder","onChange","target","prevState","App","render","props","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c6737a61.chunk.js","sourcesContent":["import uuidv1 from 'uuid/v1';\n\nconst cellGenerator = () => {\n  let value;\n\n  do {\n    value = Math.trunc(Math.random()*1000);\n  } while (value < 100);\n\n  return {\n    uuid: uuidv1(),\n    value,\n  };\n};\n\nexport default cellGenerator;\n","import cellGenerator from './cell-generator';\n\nconst tableGenerator = ({ rowCount, columnCount }) => {\n  const nums = [];\n\n  for (let i = 0; i < rowCount; i++) {\n    nums.push([]);\n    for (let j = 0; j < columnCount; j++)\n      nums[i].push(cellGenerator());\n  }\n\n  return nums;\n};\n\nexport default tableGenerator;\n","import cellGenerator from './cell-generator';\n\nconst rowGenerator = columnCount => {\n  const row = [];\n\n  for (let i = 0; i < columnCount; i++) {\n    row.push(cellGenerator());\n  }\n\n  return row;\n};\n\nexport default rowGenerator;\n","import { createStore } from 'redux';\n\nimport tableGenerator from '../functions/generators/table-generator';\nimport rowGenerator from '../functions/generators/row-generator';\n\nconst LOADING = 'LOADING';\nconst LOADED = 'LOADED';\n\nconst GENERATE_TABLE = 'GENERATE_TABLE';\nconst ADD_ROW = 'ADD_ROW';\nconst REMOVE_ROW = 'REMOVE_ROW';\nconst INCREASE = 'INCREASE';\nconst DECREASE = 'DECREASE';\nconst SET_PERCENTAGE_ROW = 'SET_PERCENTAGE_ROW';\n\nexport const loading = () => ({ type: LOADING });\nexport const loaded = () => ({ type: LOADED });\n\nexport const generateTable = tableVars => ({ type: GENERATE_TABLE, tableVars });\nexport const addRow = () => ({ type: ADD_ROW });\nexport const removeRow = rowIndex => ({ type: REMOVE_ROW, rowIndex });\nexport const increase = uuid => ({ type: INCREASE, uuid });\nexport const decrease = uuid => ({ type: DECREASE, uuid });\nexport const setPercentageRow = rowIndex => ({ type: SET_PERCENTAGE_ROW, rowIndex });\n\nconst initialState = {\n  rowCount: null,\n  columnCount: null,\n  nearestCount: null,\n  nums: [],\n  startLoading: false,\n  finishLoading: false,\n  percentageRow: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n  case LOADING:\n    return {\n      ...state,\n      loading: true,\n      loaded: false,\n    };\n\n  case LOADED:\n    return {\n      ...state,\n      loading: false,\n      loaded: true,\n    };\n\n  case GENERATE_TABLE:\n    return {\n      ...state,\n      nearestCount: action.tableVars.nearestCount,\n      rowCount: action.tableVars.rowCount,\n      columnCount: action.tableVars.columnCount,\n      nums: tableGenerator(action.tableVars),\n    };\n\n  case ADD_ROW:\n    return {\n      ...state,\n      nums: [...state.nums, rowGenerator(state.columnCount)],\n    };\n\n  case REMOVE_ROW:\n    return {\n      ...state,\n      nums: state.nums\n        .filter((row, rowIndex) => rowIndex !== action.rowIndex),\n    };\n\n  case INCREASE:\n    return {\n      ...state,\n      nums: state.nums\n        .map(row => row.map(cell => cell.uuid !== action.uuid\n          ? cell\n          : { ...cell, value: cell.value + 1 }\n        )),\n    };\n\n  case DECREASE:\n    return {\n      ...state,\n      nums: state.nums\n        .map(row => row.map(cell => cell.uuid !== action.uuid\n          ? cell\n          : { ...cell, value: cell.value - 1 }\n        )),\n    };\n\n  case SET_PERCENTAGE_ROW:\n    return {\n      ...state,\n      percentageRow: action.rowIndex,\n    };\n\n  default:\n    return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport '../Styles/Spinner.css';\n\nconst Spinner = () => (\n  <>\n    <div className=\"scaling-squares-spinner\">\n      <div className=\"square\"></div>\n      <div className=\"square\"></div>\n      <div className=\"square\"></div>\n      <div className=\"square\"></div>\n    </div>\n    <p className=\"spinner-header\">Table construction is in progress...</p>\n  </>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst TableHead = ({ nums }) => (\n  <thead>\n    <tr>\n      <th>Row</th>\n      {nums[0].map((cell, cellIndex) => (\n        <th key={cellIndex} >Column {cellIndex + 1}</th>\n      ))}\n      <th>Sum</th>\n    </tr>\n  </thead>\n);\n\nconst mapStateToProps = state => ({\n  nums: state.nums,\n});\n\nexport default connect(mapStateToProps, null)(TableHead);\n\nTableHead.propTypes = {\n  nums: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.object)\n  ).isRequired,\n};\n","const calcAverage = (nums, cellIndex) => {\n  let sum = 0;\n\n  for (let i = 0; i < nums.length; i++) {\n    sum += nums[i][cellIndex]['value'];\n  }\n\n  return Math.trunc(sum / nums.length);\n};\n\nexport default calcAverage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport calcAverage from '../functions/calculators/calc-average';\n\nconst TableFooter = ({ nums }) => (\n  <tfoot>\n    <tr>\n      <td>Average</td>\n      {nums[0].map((cell, cellIndex) => (\n        <td key={cellIndex}>{calcAverage(nums, cellIndex)}</td>\n      ))}\n      <td></td>\n    </tr>\n  </tfoot>\n);\n\nconst mapStateToProps = state => ({\n  nums: state.nums,\n});\n\nexport default connect(mapStateToProps, null)(TableFooter);\n\nTableFooter.propTypes = {\n  nums: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.object)\n  ).isRequired,\n};\n","const calcSum = row => row.reduce((a, {value}) => a.value + value || a + value);\n\nexport default calcSum;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Actions from '../Strore/store';\n\nconst TableCell = ({ cell, increase, decrease, rowSum }) => {\n  const percentageValue = Math.round(cell.value / rowSum * 10000) / 100;\n\n  return (\n    <td\n      className=\"table__cell\"\n      onClick={() => increase(cell.uuid)}\n      onContextMenu={(event) => {\n        event.preventDefault();\n        decrease(cell.uuid);\n      }}\n    >\n      <div className=\"table__cell-container\">\n        <span className=\"table__cell-absolut\">\n          {cell.value}\n        </span>\n\n        <div className=\"table__cell-percentage\" >\n          <div className=\"chart\" style={{ height: `${percentageValue}%` }} />\n          {`${percentageValue}%`}\n        </div>\n\n      </div>\n    </td>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  increase: uuid => dispatch(Actions.increase(uuid)),\n  decrease: uuid => dispatch(Actions.decrease(uuid)),\n});\n\nexport default connect(null, mapDispatchToProps)(TableCell);\n\nTableCell.propTypes = {\n  cell: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    uuid: PropTypes.string.isRequired,\n  }).isRequired,\n  increase: PropTypes.func.isRequired,\n  decrease: PropTypes.func.isRequired,\n  rowSum: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Actions from '../Strore/store';\nimport calcSum from '../functions/calculators/calc-sum';\nimport TableCell from './TableCell';\n\nconst TableRow = ({\n  row,\n  rowIndex,\n  removeRow,\n  percentageRow,\n  setPercentageRow\n}) => {\n  const rowSum = calcSum(row);\n\n  return (\n    <tr className={rowIndex === percentageRow && 'table__row--show-percentage'}>\n      <td className=\"table__row-name\" onClick={() => removeRow(rowIndex)}>\n        <span className=\"table__row-title\">Row {rowIndex + 1}</span>\n        <span className=\"table__row-action\">Remove row</span>\n      </td>\n      {row.map(cell => (\n        <TableCell\n          cell={cell}\n          rowSum={rowSum}\n          key={cell.uuid}\n        />\n      ))}\n      <td\n        onMouseOver={() => {\n          console.log('over', rowIndex);\n          setPercentageRow(rowIndex)}}\n        onMouseLeave={() => setPercentageRow(null)}\n      >\n        {rowSum}\n      </td>\n    </tr>\n  );\n};\n\nconst mapStateToProps = state => ({\n  percentageRow: state.percentageRow,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeRow: rowIndex => dispatch(Actions.removeRow(rowIndex)),\n  setPercentageRow: rowIndex => dispatch(Actions.setPercentageRow(rowIndex)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);\n\nTableRow.propTypes = {\n  row: PropTypes.arrayOf(PropTypes.object).isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  removeRow: PropTypes.func.isRequired,\n  percentageRow: PropTypes.number.isRequired,\n  setPercentageRow: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Actions from '../Strore/store';\nimport TableRow from './TableRow';\n\nconst TableBody = ({ nums, addRow }) => (\n  <tbody>\n    {nums.map((row, rowIndex) => (\n      <React.Fragment key={rowIndex}>\n        <TableRow row={row} rowIndex={rowIndex} />\n      </React.Fragment>\n    ))}\n    <tr>\n      <td className=\"table__add-row\">\n        <button\n          type=\"button\"\n          className=\"table__add-btn\"\n          onClick={addRow}\n        >\n          Add row\n        </button>\n      </td>\n    </tr>\n  </tbody>\n);\n\n\nconst mapStateToProps = state => ({\n  nums: state.nums,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addRow: () => dispatch(Actions.addRow()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableBody);\n\nTableBody.propTypes = {\n  nums: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.object)\n  ).isRequired,\n  addRow: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport TableHead from './TableHead';\nimport TableFooter from './TableFooter';\nimport TableBody from './TableBody';\n\nconst MatrixTable = () => (\n  <div className=\"table-container\">\n    <div className=\"table-wrapper\">\n      <table className=\"table\">\n        <TableHead />\n        <TableFooter />\n        <TableBody />\n      </table>\n    </div>\n  </div>\n);\n\nexport default MatrixTable;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Actions from '../Strore/store';\n\nconst StartingForm = ({ generateTable, loading, loaded }) => {\n  const formInitialState = { rowCount: 5, columnCount: 3, nearestCount: 1 };\n  const [formState, setFormState] = useState(formInitialState);\n\n  const setRowCount = ({ target }) => {\n    setFormState(prevState => ({\n      ...prevState,\n      rowCount: target.value,\n    }));\n  };\n\n  const setColumnCount = ({ target }) => {\n    setFormState(prevState => ({\n      ...prevState,\n      columnCount: target.value,\n    }));\n  };\n\n  const setNearestCount = ({ target }) => {\n    setFormState(prevState => ({\n      ...prevState,\n      nearestCount: target.value,\n    }));\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formState.rowCount && formState.columnCount && formState.nearestCount) {\n      loading();\n      generateTable(formState);\n      setTimeout(loaded, 1000);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={submitHandler}\n      className=\"starting-form\"\n    >\n      <h2>Set number of table <br /> rows and columns</h2>\n      <label className=\"starting-form__label\">\n        Rows\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"10\"\n          placeholder=\"Rows\"\n          value={formState.rowCount}\n          onChange={setRowCount}\n        />\n      </label>\n\n      <label className=\"starting-form__label\">\n        Columns\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"5\"\n          placeholder=\"Columns\"\n          value={formState.columnCount}\n          onChange={setColumnCount}\n        />\n      </label>\n\n      <label className=\"starting-form__label\">\n        Highlighted cells\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"5\"\n          placeholder=\"Highlighted cells\"\n          value={formState.nearestCount}\n          onChange={setNearestCount}\n        />\n      </label>\n\n      <button type=\"submit\">Generate table</button>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  generateTable: tableVars => dispatch(Actions.generateTable(tableVars)),\n  loading: () => dispatch(Actions.loading()),\n  loaded: () => dispatch(Actions.loaded()),\n});\n\nexport default connect(null, mapDispatchToProps)(StartingForm);\n\nStartingForm.propTypes = {\n  generateTable: PropTypes.func.isRequired,\n  loading: PropTypes.func.isRequired,\n  loaded: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Styles/App.scss';\nimport Spinner from './Components/Spinner';\nimport MatrixTable from './Components/MatrixTable';\nimport StartingForm from './Components/StartingForm';\n\nclass App extends React.Component {\n  render = () => {\n    const { nums , loading, loaded } = this.props;\n\n    return (\n      <div className=\"App\">\n        <h1>MN Matrix</h1>\n        {!loading && nums.length === 0 && <StartingForm />}\n        {loading && <Spinner />}\n        {loaded && nums.length > 0 && <MatrixTable />}\n      </div>\n    );\n  };\n}\n\nconst mapStateToPrors = state => ({\n  nums: state.nums,\n  loading: state.loading,\n  loaded: state.loaded,\n});\n\nexport default connect(mapStateToPrors, null)(App);\n\nApp.propTypes = {\n  nums: PropTypes.arrayOf(\n    PropTypes.arrayOf(PropTypes.object)\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  loaded: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './Strore/store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}